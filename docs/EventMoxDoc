
Данный код определяет класс Event, который моделирует мероприятия с атрибутами, 
такими как идентификатор, расходы, дата и причина. 
Класс предоставляет методы для заполнения своих атрибутов случайными значениями из предустановленных списков
и для получения всех значений объекта в виде словаря.

Класс Event используется для представления мероприятия с связанными с ним атрибутами. 
Он включает конструктор для инициализации значений атрибутов и методы для заполнения этих значений
случайными данными и получения всех атрибутов мероприятия в виде словаря.

Атрибуты:
    id: Уникальный идентификатор мероприятия (по умолчанию None).
    spending: Сумма расходов, связанных с мероприятием (по умолчанию None).
    date: Дата проведения мероприятия (по умолчанию None).
    reason: Причина проведения мероприятия (по умолчанию None).
Методы:
    __init__(self, id=None, spending=None, date=None, reason=None)

Конструктор класса. Инициализирует объект Event с заданными значениями:

    id: Уникальный идентификатор мероприятия.
    spending: Расходы на мероприятие.
    date: Дата проведения мероприятия.
    reason: Причина проведения мероприятия.

fill(self, id)
    Метод, который заполняет объект случайными значениями из конфигурационного файла, 
    используя переданный идентификатор id. Возвращает новый объект Event с заполненными атрибутами.
Параметры:
    id: Уникальный идентификатор мероприятия.
Возвращаемое значение: 
    Объект Event с установленными атрибутами id, spending, date и reason, 
    случайно выбранными из списков, определенных в модуле config.

all(self)
    Метод, который возвращает словарь, содержащий все атрибуты объекта Event.

Возвращаемое значение: 
    Словарь, где ключи соответствуют атрибутам(id, spendings, date, reason) и их значениям, например:

Пример использования
    event = Event().fill(1)
    event_data = event.all()
    print(event_data)
    
    В этом примере создается объект Event, который заполняется случайными данными, 
    а затем возвращается в виде словаря, который выводится на экран.