Данный код предназначен для работы с базой данных, использующей SQLAlchemy 
в качестве ORM (Object Relational Mapping) для управления событиями и билетами. 
Он осуществляет заполнение базы данных информацией о событиях и билетах, а также предоставляет 
функциональность для случайного изменения дат билетов и отправки уведомлений.

Импорт библиотек и инициализация
В начале кода происходит импорт необходимых классов и методов:

Инициализация базы данных:

engine = create_engine('sqlite:///hakaton.db')
Session = sessionmaker(bind=engine)
session_db = Session()
Здесь создается движок базы данных SQLite и сессия для выполнения операций.

Функции
    event_fill(n)
        Заполняет базу данных событиями.
    Аргументы:
        n: Количество событий для заполнения.
    Описание:
        Создает массив event_arr, содержащий n экземпляров классов Event.
        Добавляет каждое событие в базу данных, используя сессию session_db.
    Пример использования:
        event_fill(10)  # Заполнить базу 10 событиями
    
    ticket_fill(n)
        Заполняет базу данных билетами.
    Аргументы:
        n: Количество билетов для заполнения.
    Описание:
        Создает массив ticket_arr, содержащий n экземпляров классов Ticket.
        Добавляет каждый билет в базу данных, используя сессию session_db.
    Пример использования:
        ticket_fill(20)  # Заполнить базу 20 билетами
    
    random_event()
        Случайным образом изменяет дату билета и отправляет уведомление.
        
    Описание:
        Сначала выбирается случайное значение (0 или 1) для определения, будет ли изменена дата.
        Если дата должна измениться, выбирается случайный билет из базы данных.
        Изменяется поле date_arrive на случайную дату из заранее определенного списка DATES.
        Отправляется уведомление на электронную почту с информацией о переносе события.
    Пример использования:
        random_event()  # Выполнить случайное изменение события

Заключение
    Этот код дает возможность создавать и управлять событиями и билетами в рамках базы данных на основе SQLite. 
    Он может стать основой для более сложной системы управления мероприятиями с подключением крупных баз данных 
    и дополнительных функций, таких как управление пользователями и подробная аналитика.